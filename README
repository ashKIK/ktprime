  the most fastest single-thread sieving prime programming for n < 2^64.
Mingw: g++ 5.1.0 run on windows 10
g++ -DSIEVE_SIZE=2048 -DW30 -march=native -funroll-loops -O3 -s -pipe
"Windows 10 x64                   i3 350M,i5 3470,i7 7500u\n"
"pi(1e11, 1e10)  =  394050419     5.20    2.91    2.30\n"
"pi(1e12, 1e10)  =  361840208     6.31    3.40    2.70\n"
"pi(1e13, 1e10)  =  334067230     7.56    3.94    3.21\n"
"pi(1e14, 1e10)  =  310208140     9.24    4.64    3.87\n"
"pi(1e15, 1e10)  =  289531946     11.2    5.50    4.64\n"
"pi(1e16, 1e10)  =  271425366     13.0    6.40    5.42\n"
"pi(1e17, 1e10)  =  255481287     15.1    7.45    6.15\n"
"pi(1e18, 1e10)  =  241272176     18.3    8.88    7.35\n"
"pi(1e19, 1e10)  =  228568014     25.2    11.9    9.95\n"
"pi(2^64-1e9,1e9)=  22537866      8.75    4.28    3.62\n"
"pi(1e18, 1e6)   =  24280         0.75    0.46    0.34\n"
"pi(1e18, 1e8)   =  2414886       1.50    0.81    0.70\n"
"pi(1e18, 1e9)   =  24217085      3.80    1.80    1.48\n"
"pi(1e14, 1e12)  =  31016203073   930     466     324\n"
"pi(1e16, 1e12)  =  27143405794   1300    640     462\n"
"pi(1e18, 1e12)  =  24127637783   1600    810     592\n"
"pi(1e19, 1e12)  =  22857444126   1800    900     622\n"
"pi(1e18, 1e13)  =  241274558866          8180    6000\n"
"pi(1e19, 1e13)  =  228575545410          8800    6210\n";
doc:
	http://sweet.ua.pt/tos/software/prime_sieve.html
	http://primesieve.org/
Each file is a useful tool and it's easy to be tested.
